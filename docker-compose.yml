version: '3'

services:
  app:
    build:
      context: ./web
      dockerfile: ../docker_compose/app/Dockerfile
    image: jsl-app
    container_name: jsl-app
    restart: unless-stopped
    tty: true
    expose:
      - "8080"
    volumes:
      - ./web:/var/www/app
    env_file:
      - ./docker_compose/app/.env
      - ./docker_compose/mongodb/.env
      - ./docker_compose/postgres/.env
    environment:
      DEBUG: 'true'
      APP_NAME: 'FlaskApp'
    # command: gunicorn --reload wsgi:app -w 1 -b 0.0.0.0:8080
    networks:
      - jsl-network

  # vue_ui:
  #   build:
  #     context: ./vue_ui
  #     dockerfile: ../docker_compose/vue_ui/Dockerfile
  #   image: jsl-vue_ui
  #   container_name:  jsl-vue_ui
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #       - "8000:8000"
  #       - "5000:5000"
  #   stdin_open: true
  #   #  mount the volumes so we can change code and hot reload
  #   # volumes:
  #   #     - './vue_ui:/vue_ui'
  #   #  port allows the host machine to link to container
  #   #  8000 for vue ui, 5000 for our vue app
  #   networks:
  #     - jsl-network

  nginx:
    image: nginx:alpine
    container_name: jsl-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker_compose/nginx/conf.d/:/etc/nginx/conf.d/
    env_file:
      - ./docker_compose/nginx/.env
    environment:
      SERVICE_NAME: mongodb
      SERVICE_TAGS: dev
    networks:
      - jsl-network

  postgres:
    build: ./docker_compose/postgres/
    image: jsl-postgres
    container_name: jsl-postgres
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file:
      - ./docker_compose/postgres/.env
    environment:
      SERVICE_NAME: postgres
      SERVICE_TAGS: dev
    networks:
      - jsl-network

  mongodb:
    image: mongo:4.0.8
    container_name: jsl-mongo
    restart: unless-stopped
    tty: true
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db
    env_file:
      - ./docker_compose/mongodb/.env
    command: mongod --auth
    networks:
      - jsl-network

  redis:
    image: redis:latest
    container_name: jsl-redis
    restart: unless-stopped
    tty: true
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - jsl-network

networks:
  jsl-network:
    driver: bridge

volumes:
  pgdata:
    driver: local
  mongodbdata:
    driver: local
  redisdata:
    driver: local
